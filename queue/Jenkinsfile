pipeline{
  agent {
    label 'master'
  }
  parameters {
    string(name: 'ListOfJobs', defaultValue: '', description: 'upstream jobs to run')
  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '15', daysToKeepStr: '30'))
  }
  environment {
    BUILD_TRIGGER_BY = "${currentBuild.getBuildCauses()[0].userId}"
  }
  stages {
    stage('prep'){
      steps {
        script {
          def jobsParam = params.ListOfJobs
          def jobsJson = new groovy.json.JsonSlurper().parseText(jobsParam)
          echo "Jobs to run: ${jobsParam}"
          def liveJobs = jobsJson.parameters.findall { it.name == 'env' && it.value == 'live' }
          def stagingJobs = jobsJson.parameters.findall { it.name == 'env' && it.value == 'staging' }
          echo "live jobs: ${liveJobs}"
          echo "staging jobs: ${stagingJobs}"
        }
      }
    }
    stage('live run') {
      steps {
        script {
          echo "Live run for jobs: ${params.ListOfJobs}"
        }
      }
    }
    stage('staging run') {
      steps {
        script {
          echo "Staging run for jobs: ${params.ListOfJobs}"
        }
      }
    }
  }
}
